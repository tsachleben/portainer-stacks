---
services:
  postgresql:
    image: docker.io/library/postgres:12-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      authentik_backend: {}
    environment:
      TZ: ${TZ}
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASS:?database password required}
  redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - redis-data:/data
    networks:
      authentik_backend: {}
    environment:
      TZ: ${TZ}
  server:
    image: ghcr.io/goauthentik/server:2023.10.5
    restart: unless-stopped
    command: server
    volumes:
      - authentik-media:/media
      - authentik-templates:/templates
    networks:
      authentik_backend: {}
      wg_bridge:
        ipv4_address: 172.16.1.5
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB}
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    env_file:
      - stack.env
    depends_on:
      - postgresql
      - redis
  worker:
    image: ghcr.io/goauthentik/server:2023.10.5
    restart: unless-stopped
    command: worker
    volumes:
      - authentik-media:/media
      - authentik-certs:/certs
      - authentik-templates:/templates
    networks:
      authentik_backend: {}
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    env_file:
      - stack.env
    depends_on:
      - postgresql
      - redis

volumes:
  postgres-data: {}
  redis-data: {}
  authentik-media: {}
  authentik-certs: {}
  authentik-templates: {}

networks:
  wg_bridge:
    external: true
  authentik_backend: {}
